當開始一個線程的時候，將花費幾百微秒來組織類似以下的內容
    一個新的局部變量棧(Stack)
線程池就可以節省這種開銷
    通過預先創建一個可循環使用的線程的池來減少這一開銷
線程池對於高校的併行編程和細粒度開發是必不可少的
它允許再不被線程啟動的開銷掩沒的情況下進行短期操作


注意:
1.不可設置線程池的Name
2.都是後台線程
3.阻塞池線程可能使性能降級

可以自由更改池線程優先級
    當它釋放回池的時候優先即將還原為正常狀態
可以通過Thread.CurrentThread.IsThreadPoolThread屬性
盼端是否執行在池線程上

進入線程池:
使用Task.Run()

線程池的整潔:
提供另一個功能，及確保臨時超出computer-bond的工作不會
導致CPU超額

CPU超額:活躍的線程超過CPU核數，操作系統就需要對線程進行時間切片

超額對於性能影響很大，時間切片需要昂貴的上下文切換
並且可能使CPU緩存失效，而CPU緩存對於現代處理器性能至關重要

線程池整潔CLR策略:
CLR通過對任務排隊並對其啟動進行節流限制來避免超額

想充分運用CPU，線程池的整潔非常重要